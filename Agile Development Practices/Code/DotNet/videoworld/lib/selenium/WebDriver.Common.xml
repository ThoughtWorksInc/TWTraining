<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebDriver.Common</name>
    </assembly>
    <members>
        <member name="T:OpenQA.Selenium.By">
            <summary>
            Provides a mechanism by which to find elements within a document.
            </summary>
            <remarks>It is possible to create your own locating mechanisms for finding documents.
            In order to do this,subclass this class and override the protected methods. However,
            it is expected that that all subclasses rely on the basic finding mechanisms provided 
            through static methods of this class. An example of this can be found in OpenQA.Support.ByIdOrName
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.By.Id(System.String)">
            <summary>
            Gets a mechanism to find elements by their ID.
            </summary>
            <param name="idToFind">The ID to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.LinkText(System.String)">
            <summary>
            Gets a mechanism to find elements by their link text.
            </summary>
            <param name="linkTextToFind">The link text to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Name(System.String)">
            <summary>
            Gets a mechanism to find elements by their name.
            </summary>
            <param name="nameToFind">The name to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.XPath(System.String)">
            <summary>
            Gets a mechanism to find elements by an XPath query.
            </summary>
            <param name="xpathToFind">The XPath query to use.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.ClassName(System.String)">
            <summary>
            Gets a mechanism to find elements by their CSS class.
            </summary>
            <param name="classNameToFind">The CSS class to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
            <remarks>If an element has many classes then this will match against each of them.
            For example if the value is "one two onone", then the following values for the 
            className parameter will match: "one" and "two".</remarks>
        </member>
        <member name="M:OpenQA.Selenium.By.PartialLinkText(System.String)">
            <summary>
            Gets a mechanism to find elements by a partial match on their link text.
            </summary>
            <param name="partialLinkTextToFind">The partial link text to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.TagName(System.String)">
            <summary>
            Gets a mechanism to find elements by their tag name.
            </summary>
            <param name="tagNameToFind">The tag name to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.CssSelector(System.String)">
            <summary>
            Gets a mechanism to find elements by their cascading stylesheet (CSS) selector.
            </summary>
            <param name="cssSelectorToFind">The CSS selector to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds the first element matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext"/> object to use to search for the elements.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds all elements matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext"/> object to use to search for the elements.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.ToString">
            <summary>
            Gets a string representation of the finder.
            </summary>
            <returns>The string displaying the finder content.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal 
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the 
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Cookie">
            <summary>
            Represents a cookie in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name, 
            value, domain, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name, 
            value, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name, 
            value, and path.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name and value.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.ToString">
            <summary>
            Creates and returns a string representation of the cookie. 
            </summary>
            <returns>A string representation of the cookie.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal 
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the 
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Name">
            <summary>
            Gets the name of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Value">
            <summary>
            Gets the value of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Domain">
            <summary>
            Gets the domain of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Path">
            <summary>
            Gets the path of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Secure">
            <summary>
            Gets a value indicating whether the cookie is secure.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Expiry">
            <summary>
            Gets the expiration date of the cookie.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ElementNotVisibleException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverException">
            <summary>
            Represents exceptions that are thrown when an error occurs during actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.IAlert">
            <summary>
            Defines the interface through which the user can manipulate JavaScript alerts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.Dismiss">
            <summary>
            Dismisses the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.Accept">
            <summary>
            Accepts the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.SendKeys(System.String)">
            <summary>
            Sends keys to the alert.
            </summary>
            <param name="keysToSend">The keystrokes to send.</param>
        </member>
        <member name="P:OpenQA.Selenium.IAlert.Text">
            <summary>
            Gets the text of the alert.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IHasInputDevices">
            <summary>
            Provides access to input devices for advanced user interactions.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.Keyboard">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IKeyboard"/> object for sending keystrokes to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.Mouse">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IMouse"/> object for sending mouse commands to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.ActionBuilder">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/> object for building actions to send to the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IJavaScriptExecutor">
            <summary>
            Defines the interface through which the user can execute JavaScript.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
            <remarks>
            <para>
            The <see cref="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String,System.Object[])"/>method executes JavaScript in the context of 
            the currently selected frame or window. This means that "document" will refer 
            to the current document. If the script has a return value, then the following 
            steps will be taken:
            </para>
            <para>
            <list type="bullet">
            <item><description>For an HTML element, this method returns a <see cref="T:OpenQA.Selenium.IWebElement"/></description></item>
            <item><description>For a number, a <see cref="T:System.Int64"/> is returned</description></item>
            <item><description>For a boolean, a <see cref="T:System.Boolean"/> is returned</description></item>
            <item><description>For all other cases a <see cref="T:System.String"/> is returned.</description></item>
            <item><description>For an array,we check the first element, and attempt to return a 
            <see cref="T:System.Collections.Generic.List`1"/> of that type, following the rules above. Nested lists are not
            supported.</description></item>
            <item><description>If the value is null or there is no return value,
            <see langword="null"/> is returned.</description></item>
            </list>
            </para>
            <para>
            Arguments must be a number (which will be converted to a <see cref="T:System.Int64"/>),
            a <see cref="T:System.Boolean"/>, a <see cref="T:System.String"/> or a <see cref="T:OpenQA.Selenium.IWebElement"/>.
            An exception will be thrown if the arguments do not meet these criteria. 
            The arguments will be made available to the JavaScript via the "arguments" magic 
            variable, as if the function were called via "Function.apply" 
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteAsyncScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript asynchronously in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IJavaScriptExecutor.IsJavaScriptEnabled">
            <summary>
            Gets a value indicating whether JavaScript is enabled for this browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IKeyboard">
            <summary>
            Provides methods representing basic keyboard actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the target.
            </summary>
            <param name="keySequence">A string representing the keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.PressKey(System.String)">
            <summary>
            Presses a key.
            </summary>
            <param name="keyToPress">The key value representing the key to press.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.ReleaseKey(System.String)">
            <summary>
            Releases a key.
            </summary>
            <param name="keyToRelease">The key value representing the key to release.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.IllegalLocatorException">
            <summary>
            The exception that is thrown when an attempt is made to locate an item using invalid criteria.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.ILocatable">
            <summary>
            Defines the interface through which the user can discover where an element is on the screen.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILocatable.LocationOnScreenOnceScrolledIntoView">
            <summary>
            Gets the location of an element on the screen, scrolling it into view
            if it is not currently on the screen.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILocatable.Coordinates">
            <summary>
            Gets the coordinates identifying the location of this element using
            various frames of reference.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IMouse">
            <summary>
            Provides methods representing basic mouse actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.Click(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the primary mouse button.
            </summary>
            <param name="where">An <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.DoubleClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Double-clicks at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to double-click.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseDown(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Presses the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to press the mouse button down.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseUp(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Releases the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to release the mouse button.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to move the mouse to.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
            <param name="offsetX">A horizontal offset from the coordinates specified in <paramref name="where"/>.</param>
            <param name="offsetY">A vertical offset from the coordinates specified in <paramref name="where"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.ContextClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the secondary mouse button.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="T:OpenQA.Selenium.INavigation">
            <summary>
            Defines an interface allowing the user to access the browser's history and to 
            navigate to a given URL.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Back">
            <summary>
            Move back a single entry in the browser's history.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Forward">
            <summary>
            Move a single "item" forward in the browser's history.
            </summary>
            <remarks>Does nothing if we are on the latest page viewed.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)">
            <summary>
             Load a new web page in the current browser window.
            </summary>
            <param name="url">The URL to load. It is best to use a fully qualified URL</param>
            <remarks>
            Calling the <see cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/> method will load a new web page in the current browser window. 
            This is done using an HTTP GET operation, and the method will block until the 
            load is complete. This will follow redirects issued either by the server or 
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since 
            should the underlying page change while your test is executing the results of 
            future calls against this interface will be against the freshly loaded page. 
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)">
            <summary>
             Load a new web page in the current browser window.
            </summary>
            <param name="url">The URL to load.</param>
            <remarks>
            Calling the <see cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/> method will load a new web page in the current browser window. 
            This is done using an HTTP GET operation, and the method will block until the 
            load is complete. This will follow redirects issued either by the server or 
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since 
            should the underlying page change while your test is executing the results of 
            future calls against this interface will be against the freshly loaded page. 
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Refresh">
            <summary>
            Refreshes the current page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IOptions">
            <summary>
            Defines an interface allowing the user to set options on the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.AddCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Adds a cookie to the current page.
            </summary>
            <param name="cookie">The <see cref="T:OpenQA.Selenium.Cookie"/> object to be added.</param>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.GetCookies">
            <summary>
            Gets all cookies defined for the current page.
            </summary>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of the cookies defined for the current page.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.GetCookieNamed(System.String)">
            <summary>
            Gets a cookie with the specified name.
            </summary>
            <param name="name">The name of the cookie to retrieve.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Cookie"/> containing the name. Returns <see langword="null"/>
            if no cookie with the specified name is found.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.DeleteCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Deletes the specified cookie from the page.
            </summary>
            <param name="cookie">The <see cref="T:OpenQA.Selenium.Cookie"/> to be deleted.</param>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.DeleteCookieNamed(System.String)">
            <summary>
            Deletes the cookie with the specified name from the page.
            </summary>
            <param name="name">The name of the cookie to be deleted.</param>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.DeleteAllCookies">
            <summary>
            Deletes all cookies from the page.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.Timeouts">
            <summary>
            Provides access to the timeouts defined for this driver.
            </summary>
            <returns>An object implementing the <see cref="T:OpenQA.Selenium.ITimeouts"/> interface.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IOptions.Speed">
            <summary>
            Gets or sets a value representing the speed with which user interactions 
            take place in the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IRenderedWebElement">
            <summary>
            Defines the interface through which the user controls drawn elements on the page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IWebElement">
            <summary>
            Defines the interface through which the user controls elements on the page.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.IWebElement"/> interface represents an HTML element. 
            Generally, all interesting operations to do with interacting with a page will
            be performed through this interface. 
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.ISearchContext">
            <summary>
            Defines the interface used to search for elements.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)">
            <summary>
            Find the first <see cref="T:OpenQA.Selenium.IWebElement"/> using the given method. 
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">If no element matches the criteria.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ISearchContext.FindElements(OpenQA.Selenium.By)">
            <summary>
            Find all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context 
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>If this element is a text entry element, the <see cref="M:OpenQA.Selenium.IWebElement.Clear"/>
            method will clear the value. It has no effect on other elements. Text entry elements 
            are defined as elements with INPUT or TEXTAREA tags.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in 
            <see cref="T:OpenQA.Selenium.Keys"/>.</remarks>
            <seealso cref="T:OpenQA.Selenium.Keys"/>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>If this current element is a form, or an element within a form, 
            then this will be submitted to the web server. If this causes the current 
            page to change, then this method will block until the new page is loaded.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Click">
            <summary>
            Clicks this element. 
            </summary>
            <remarks>
            <para>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.IWebElement.Click"/> 
            method will block until the page has loaded. After calling the 
            <see cref="M:OpenQA.Selenium.IWebElement.Click"/> method, you should discard all references to this 
            element unless you know that the element and the page will still be present. 
            Otherwise, any further operations performed on this element will have an undefined.
            behavior.
            </para>
            <para>
            If this element is not clickable, then this operation is ignored. This allows you to
            simulate a users to accidentally missing the target when clicking. 
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Select">
            <summary>
            Selects this element.
            </summary>
            <remarks>The <see cref="M:OpenQA.Selenium.IWebElement.Select"/> method is valid for radio buttons, 
            "option" elements within a "select" element, and checkboxes.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a <see langword="null"/> if the 
            value is not set.</returns>
            <remarks>The <see cref="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)"/> method will return the current value
            of the attribute, even if the value has been modified after the page has been 
            loaded. Note that the value of the following attributes will be returned even if 
            there is no explicit attribute on the element:
            <list type="table">
            <listheader>
            <term>Attribute name</term>
            <term>Value returned if not explicitly specified</term>
            <term>Valid element types</term>
            </listheader>
            <item>
            <description>checked</description>
            <description>checked</description>
            <description>Check Box</description>
            </item>
            <item>
            <description>selected</description>
            <description>selected</description>
            <description>Options in Select elements</description>
            </item>
            <item>
            <description>disabled</description>
            <description>disabled</description>
            <description>Input and other UI elements</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Toggle">
            <summary>
            Toggles the state of this element.
            </summary>
            <returns><see langword="true"/> if the element is selected; <see langword="false"/> otherwise.</returns>
            <remarks>If the element is a checkbox, the <see cref="M:OpenQA.Selenium.IWebElement.Toggle"/> method
            will toggle the element's state from selected to not selected, or from not selected 
            to selected.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.TagName">
            <summary>
            Gets a value indicating the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.TagName"/> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specifiedby the HTML markup &lt;input name="foo" /&gt;. 
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Text">
            <summary>
            Gets a value indicating the innerText of this element, without any leading 
            or trailing whitespace.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Value">
            <summary>
            Gets a value indicating the content of the "value" attribute for this element.
            </summary>
            <remarks>If the content of the "value" attribute has been modified after the page has 
            loaded (for example, through JavaScript) then this will reflect the current value 
            of the "value" attribute.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.IWebElement.Enabled"/> property will generally 
            return <see langword="true"/> for everything except explicitly disabled input elements.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IRenderedWebElement.GetValueOfCssProperty(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>The value of the specified CSS property.</returns>
            <remarks>The value returned by the <see cref="M:OpenQA.Selenium.IRenderedWebElement.GetValueOfCssProperty(System.String)"/>
            method is likely to be unpredictable in a cross-browser environment. 
            Color values should be returned as hex strings. For example, a 
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IRenderedWebElement.Hover">
            <summary>
            Simulates the user hovering the mouse over this element.
            </summary>
            <remarks>The <see cref="M:OpenQA.Selenium.IRenderedWebElement.Hover"/> method requires native events to be enabled
            in order to work as expected.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IRenderedWebElement.DragAndDropBy(System.Int32,System.Int32)">
            <summary>
            Drags and drops this element the specified distance and direction.
            </summary>
            <param name="moveRightBy">The distance (in pixels) to drag the element to the right.</param>
            <param name="moveDownBy">The distance (in pixels) to drag the element to the down.</param>
            <remarks>To drag an element left or up, use negative values for the parameters.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IRenderedWebElement.DragAndDropOn(OpenQA.Selenium.IRenderedWebElement)">
            <summary>
            Drags and drops an element onto another element.
            </summary>
            <param name="element">The <see cref="T:OpenQA.Selenium.IRenderedWebElement"/> on which to drop this element.</param>
        </member>
        <member name="P:OpenQA.Selenium.IRenderedWebElement.Location">
            <summary>
            Gets the coordinates of the upper-left corner of this element relative 
            to the upper-left corner of the page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IRenderedWebElement.Size">
            <summary>
            Gets the height and width of this element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IRenderedWebElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.IRenderedWebElement.Displayed"/> property avoids the problem 
            of having to parse an element's "style" attribute to determine
            visibility of an element.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.ITakesScreenshot">
            <summary>
            Defines the interface used to take screen shot images of the screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITakesScreenshot.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITargetLocator">
            <summary>
            Defines the interface through which the user can locate a given frame or window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(System.Int32)">
            <summary>
            Select a frame by its (zero-based) index.
            </summary>
            <param name="frameIndex">The zero-based index of the frame to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the frame cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(System.String)">
            <summary>
            Select a frame by its name or ID.
            </summary>
            <param name="frameName">The name of the frame to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the frame cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(OpenQA.Selenium.IWebElement)">
            <summary>
            Select a frame using its previously located <see cref="T:OpenQA.Selenium.IWebElement"/>
            </summary>
            <param name="frameElement">The frame element to switch to.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the element is neither a FRAME nor an IFRAME element.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">If the element is no longer valid.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Window(System.String)">
            <summary>
            Switches the focus of future commands for this driver to the window with the given name.
            </summary>
            <param name="windowName">The name of the window to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the given window.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchWindowException">If the window cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.DefaultContent">
            <summary>
            Selects either the first frame on the page or the main document when a page contains iframes.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the default frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.ActiveElement">
            <summary>
            Switches to the element that currently has the focus, or the body element 
            if no element with focus can be detected.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebElement"/> instance representing the element 
            with the focus, or the body element if no element with focus can be detected.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Alert">
            <summary>
            Switches to the currently active modal dialog for this particular driver instance.
            </summary>
            <returns>A handle to the dialog.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITimeouts">
            <summary>
            Defines the interface through which the user can define timeouts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITimeouts.ImplicitlyWait(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait when searching for an
            element if it is not immediately present.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.</param>
            <returns>A self reference</returns>
            <remarks>
            When searching for a single element, the driver should poll the page
            until the element has been found, or this timeout expires before throwing
            a <see cref="T:OpenQA.Selenium.NoSuchElementException"/>. When searching for multiple elements,
            the driver should poll the page until at least one element has been found
            or this timeout has expired.
            <para>
            Increasing the implicit wait timeout should be used judiciously as it
            will have an adverse effect on test run time, especially when used with
            slower location strategies like XPath.
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.ITimeouts.SetScriptTimeout(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait when executing JavaScript asynchronously.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.</param>
            <returns>A self reference</returns>
        </member>
        <member name="T:OpenQA.Selenium.IWebDriver">
            <summary>
            Defines the interface through which the user controls the browser.
            </summary>
            <remarks>
            The <see cref="T:OpenQA.Selenium.IWebDriver"/> interface is the main interface to use for testing, which
            represents an idealised web browser. The methods in this class fall into three categories: 
            <list type="bullet">
            <item><description>Control of the browser itself</description></item>
            <item><description>Selection of <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see></description></item>
            <item><description>Debugging aids</description></item>
            </list>
            <para>
            Key properties and methods are <see cref="P:OpenQA.Selenium.IWebDriver.Url"/>, which is used to 
            load a new web page by setting the property, and the various methods similar 
            to <see cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)"/>, which is used to find <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>.
            </para>
            <para>
            You use the interface by instantiate drivers that implement of this interface.
            You should write your tests against this interface so that you may "swap in" a 
            more fully featured browser when there is a requirement for one.
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Close">
            <summary>
            Close the current window, quitting the browser if it is the last window currently open.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Quit">
            <summary>
            Quits this driver, closing every associated window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Manage">
            <summary>
            Instructs the driver to change its settings.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IOptions"/> object allowing the user to change
            the settings of the driver.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Navigate">
            <summary>
            Instructs the driver to navigate the browser to another location.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.INavigation"/> object allowing the user to access 
            the browser's history and to navigate to a given URL.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.SwitchTo">
            <summary>
            Instructs the driver to send future commands to a different frame or window.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.ITargetLocator"/> object which can be used to select
            a frame or window.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.GetWindowHandles">
            <summary>
            Get the window handles of open browser windows.
            </summary>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all window handles
            of windows belonging to this driver instance.</returns>
            <remarks>The set of window handles returned by this method can be used to 
            iterate over all open windows of this <see cref="T:OpenQA.Selenium.IWebDriver"/> instance by 
            passing them to <c>SwitchTo().Window(string)</c></remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.GetWindowHandle">
            <summary>
            Get the current window handle.
            </summary>
            <returns>An opaque handle to this window that uniquely identifies it 
            within this driver instance.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.Url">
            <summary>
            Gets or sets the URL the browser is currently displaying.
            </summary>
            <remarks>
            Setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/> property will load a new web page in the current browser window. 
            This is done using an HTTP GET operation, and the method will block until the 
            load is complete. This will follow redirects issued either by the server or 
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since 
            should the underlying page change while your test is executing the results of 
            future calls against this interface will be against the freshly loaded page. 
            </remarks>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.Title">
            <summary>
            Gets the title of the current browser window.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.PageSource">
            <summary>
            Gets the source of the page last loaded by the browser.
            </summary>
            <remarks>
            If the page has been modified after loading (for example, by JavaScript) 
            there is no guarentee that the returned text is that of the modified page. 
            Please consult the documentation of the particular driver being used to 
            determine whether the returned text reflects the current state of the page 
            or the text last sent by the web server. The page source returned is a 
            representation of the underlying DOM: do not expect it to be formatted 
            or escaped in the same way as the response sent from the web server. 
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.Keys">
            <summary>
            Representations of pressable keys that are not text keys for sending to the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Null">
            <summary>
            Represents the NUL keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Cancel">
            <summary>
            Represents the Cancel keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Help">
            <summary>
            Represents the Help keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Backspace">
            <summary>
            Represents the Backspace key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Tab">
            <summary>
            Represents the Tab key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Clear">
            <summary>
            Represents the Clear keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Return">
            <summary>
            Represents the Return key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Enter">
            <summary>
            Represents the Enter key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Shift">
            <summary>
            Represents the Shift key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftShift">
            <summary>
            Represents the Shift key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Control">
            <summary>
            Represents the Control key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftControl">
            <summary>
            Represents the Control key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Alt">
            <summary>
            Represents the Alt key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftAlt">
            <summary>
            Represents the Alt key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Pause">
            <summary>
            Represents the Pause key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Escape">
            <summary>
            Represents the Escape key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Space">
            <summary>
            Represents the Spacebar key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.PageUp">
            <summary>
            Represents the Page Up key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.PageDown">
            <summary>
            Represents the Page Down key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.End">
            <summary>
            Represents the End key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Home">
            <summary>
            Represents the Home key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Left">
            <summary>
            Represents the left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowLeft">
            <summary>
            Represents the left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Up">
            <summary>
            Represents the up arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowUp">
            <summary>
            Represents the up arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Right">
            <summary>
            Represents the right arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowRight">
            <summary>
            Represents the right arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Down">
            <summary>
            Represents the Left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowDown">
            <summary>
            Represents the Left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Insert">
            <summary>
            Represents the Insert key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Delete">
            <summary>
            Represents the Delete key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Semicolon">
            <summary>
            Represents the semi-colon key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Equal">
            <summary>
            Represents the equal sign key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad0">
            <summary>
            Represents the number pad 0 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad1">
            <summary>
            Represents the number pad 1 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad2">
            <summary>
            Represents the number pad 2 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad3">
            <summary>
            Represents the number pad 3 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad4">
            <summary>
            Represents the number pad 4 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad5">
            <summary>
            Represents the number pad 5 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad6">
            <summary>
            Represents the number pad 6 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad7">
            <summary>
            Represents the number pad 7 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad8">
            <summary>
            Represents the number pad 8 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad9">
            <summary>
            Represents the number pad 9 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Multiply">
            <summary>
            Represents the number pad multiplication key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Add">
            <summary>
            Represents the number pad addition key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Separator">
            <summary>
            Represents the number pad thousands separator key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Subtract">
            <summary>
            Represents the number pad subtraction key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Decimal">
            <summary>
            Represents the number pad decimal separator key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Divide">
            <summary>
            Represents the number pad division key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F1">
            <summary>
            Represents the function key F1.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F2">
            <summary>
            Represents the function key F2.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F3">
            <summary>
            Represents the function key F3.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F4">
            <summary>
            Represents the function key F4.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F5">
            <summary>
            Represents the function key F5.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F6">
            <summary>
            Represents the function key F6.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F7">
            <summary>
            Represents the function key F7.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F8">
            <summary>
            Represents the function key F8.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F9">
            <summary>
            Represents the function key F9.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F10">
            <summary>
            Represents the function key F10.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F11">
            <summary>
            Represents the function key F12.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F12">
            <summary>
            Represents the function key F12.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Meta">
            <summary>
            Represents the function key META.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Command">
            <summary>
            Represents the function key COMMAND.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchElementException">
            <summary>
            The exception that is thrown when an element is not found.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NotFoundException">
            <summary>
            The exception that is thrown when an item is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchFrameException">
            <summary>
            The exception that is thrown when a frame is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchWindowException">
            <summary>
            The exception that is thrown when a window is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.PlatformType">
            <summary>
            Represents the known and supported Platforms that WebDriver runs on.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.Platform"/> class maps closely to the Operating System, 
            but differs slightly, because this class is used to extract information such as 
            program locations and line endings. </remarks>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Any">
            <summary>
            Any platform. This value is never returned by a driver, but can be used to find
            drivers with certain capabilities.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Windows">
            <summary>
            Any version of Microsoft Windows. This value is never returned by a driver, 
            but can be used to find drivers with certain capabilities.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.WinNT">
            <summary>
            Any Windows NT-based version of Microsoft Windows. This value is never returned 
            by a driver, but can be used to find drivers with certain capabilities. This value
            is equivalent to PlatformType.Windows.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.XP">
            <summary>
            Versions of Microsoft Windows that are compatible with Windows XP.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Vista">
            <summary>
            Versions of Microsoft Windows that are compatible with Windows Vista.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.MacOSX">
            <summary>
            Any version of the Macintosh OS X
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Unix">
            <summary>
            Any version of the Unix operating system.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Linux">
            <summary>
            Any version of the Linux operating system.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Darwin">
            <summary>
            Any version using the Darwin packaging system (OS X).
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Platform">
            <summary>
            Represents the platform on which tests are to be run.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Platform.#ctor(OpenQA.Selenium.PlatformType)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Platform"/> class for a specific platform type.
            </summary>
            <param name="typeValue">The platform type.</param>
        </member>
        <member name="M:OpenQA.Selenium.Platform.IsPlatformType(OpenQA.Selenium.PlatformType)">
            <summary>
            Compares the platform to the specified type.
            </summary>
            <param name="compareTo">A <see cref="P:OpenQA.Selenium.Platform.PlatformType"/> value to compare to.</param>
            <returns><see langword="true"/> if the platforms match; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Platform.CurrentPlatform">
            <summary>
            Gets the current platform.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.MajorVersion">
            <summary>
            Gets the major version of the platform operating system.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.MinorVersion">
            <summary>
            Gets the major version of the platform operating system.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.PlatformType">
            <summary>
            Gets the type of the platform.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Screenshot">
            <summary>
            Represents an image of the page currently loaded in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Screenshot"/> class.
            </summary>
            <param name="base64EncodedScreenshot">The image of the page as a Base64-encoded string.</param>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.SaveAsFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the screenshot to a file, overwriting the file if it already exists.
            </summary>
            <param name="fileName">The full path and file name to save the screenshot to.</param>
            <param name="format">A <see cref="T:System.Drawing.Imaging.ImageFormat"/> object indicating the format
            to save the image to.</param>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.ToString">
            <summary>
            Returns a <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Screenshot.AsBase64EncodedString">
            <summary>
            Gets the value of the screenshot image as a Base64-encoded string.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Screenshot.AsByteArray">
            <summary>
            Gets the value of the screenshot image as an array of bytes.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Speed">
            <summary>
            Represents the speed with which actions are executed in the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Speed.Slow">
            <summary>
            Gets a slow speed.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Speed.Medium">
            <summary>
            Gets a medium speed.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Speed.Fast">
            <summary>
            Gets a fast speed.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Speed.FromString(System.String)">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.Speed"/> object from its string description.
            </summary>
            <param name="speedName">The description of the speed to create.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Speed"/> object.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Speed.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Speed.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal 
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the 
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Speed.Timeout">
            <summary>
            Gets the timeout for the speed.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Speed.Description">
            <summary>
            Gets the description of the speed.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.StaleElementReferenceException">
            <summary>
            The exception that is thrown when a reference to an element is no longer valid.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverResult">
            <summary>
            Specifies return values for actions in the driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.Success">
            <summary>
            The action was successful.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.IndexOutOfBounds">
            <summary>
            The index specified for the action was out of the acceptable range.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoCollection">
            <summary>
            No collection was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoString">
            <summary>
            No string was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoStringLength">
            <summary>
            No string length was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoStringWrapper">
            <summary>
            No string wrapper was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchDriver">
            <summary>
            No driver matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchElement">
            <summary>
            No element matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchFrame">
            <summary>
            No frame matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NotImplemented">
            <summary>
            The functionality is not supported.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ObsoleteElement">
            <summary>
            The specified element is no longer valid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotDisplayed">
            <summary>
            The specified element is not displayed.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotEnabled">
            <summary>
            The specified element is not enabled.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnhandledError">
            <summary>
            An unhandled error occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ExpectedError">
            <summary>
            An error occurred, but it was expected.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotSelected">
            <summary>
            The specified element is not selected.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchDocument">
            <summary>
            No document matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnexpectedJavaScriptError">
            <summary>
            An unexpected JavaScript error occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoScriptResult">
            <summary>
            No result is available from the JavaScript execution.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnknownScriptResult">
            <summary>
            The result from the JavaScript execution is not recognized.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchCollection">
            <summary>
            No collection matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.Timeout">
            <summary>
            A timeout occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NullPointer">
            <summary>
            A null pointer was received.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchWindow">
            <summary>
            No window matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidCookieDomain">
            <summary>
            An illegal attempt was made to set a cookie under a different domain than the current page.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnableToSetCookie">
            <summary>
            A request to set a cookie's value could not be satisfied.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.AsyncScriptTimeout">
            <summary>
            An asynchronous JavaScript execution timed out.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.XPathLookupException">
            <summary>
            The exception that is thrown when an error occurs during an XPath lookup.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ButtonReleaseAction">
            <summary>
            Defines an action for releasing the currently held mouse button.
            </summary>
            <remarks>
            This action can be called for an element different than the one
            ClickAndHoldAction was called for. However, if this action is 
            performed out of sequence (without holding down the mouse button, 
            for example) the results will be different.
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.MouseAction">
            <summary>
            Defines an action for mouse interaction with the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction">
            <summary>
            Defines an action for keyboard and mouse interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.WebDriverAction.#ctor(OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction"/> class for the given element.
            </summary>
            <param name="actionLocation">An <see cref="T:OpenQA.Selenium.ILocatable"/> object tha provides coordinates for this action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.WebDriverAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction"/> class.
            </summary>
            <remarks>This action will take place in the context of the previous action's coordinates.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.WebDriverAction.ActionTarget">
            <summary>
            Gets the target of the action providing coordinates of the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.MouseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.MouseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="target">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.MouseAction.MoveToLocation">
            <summary>
            Moves the mouse to the location at which to perform the action.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.MouseAction.ActionLocation">
            <summary>
            Gets the coordinates at which to perform the mouse action.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.MouseAction.Mouse">
            <summary>
            Gets the mouse with which to perform the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.IAction">
            <summary>
            Provides methods by which an interaction with the browser can be performed.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IAction.Perform">
            <summary>
            Performs this action on the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ButtonReleaseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ButtonReleaseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ButtonReleaseAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ClickAction">
            <summary>
            Defines an action for clicking on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ClickAndHoldAction">
            <summary>
            Defines an action for clicking and holding the mouse button on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAndHoldAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ClickAndHoldAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAndHoldAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.CompositeAction">
            <summary>
            Defines an action that consists of a list of other actions to be performed in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.CompositeAction.AddAction(OpenQA.Selenium.Interactions.IAction)">
            <summary>
            Adds an action to the list of actions to be performed.
            </summary>
            <param name="action">An <see cref="T:OpenQA.Selenium.Interactions.IAction"/> to be appended to the
            list of actions to be performed.</param>
            <returns>A self reference.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.CompositeAction.Perform">
            <summary>
            Performs the actions defined in this list of actions.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ContextClickAction">
            <summary>
            Defines an action for clicking the secondary mouse button on an element, displaying a context menu.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ContextClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ContextClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ContextClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder">
            <summary>
            Provides a mechanism for building advanced interactions with the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder">
            <summary>
            Provides methods to build a complex sequence of user interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.KeyDown(System.String)">
            <summary>
            Sends a modifier key down message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
            <remarks>The key being sent must be in the <see cref="T:OpenQA.Selenium.Keys"/> enum.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.KeyDown(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier key down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
            <remarks>The key being sent must be in the <see cref="T:OpenQA.Selenium.Keys"/> enum.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.KeyUp(System.String)">
            <summary>
            Sends a modifier key up message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
            <remarks>The key being sent must be in the <see cref="T:OpenQA.Selenium.Keys"/> enum.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.KeyUp(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier up down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
            <remarks>The key being sent must be in the <see cref="T:OpenQA.Selenium.Keys"/> enum.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the browser.
            </summary>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.SendKeys(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a sequence of keystrokes to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the keystrokes.</param>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.ClickAndHold(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks and holds the mouse button down on the specified element.
            </summary>
            <param name="onElement">The element on which to click and hold.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.Release(OpenQA.Selenium.IWebElement)">
            <summary>
            Releases the mouse button on the specified element.
            </summary>
            <param name="onElement">The element on which to release the button.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.Click(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.Click">
            <summary>
            Clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.DoubleClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Double-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to double-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.MoveToElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Moves the mouse to the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the top-left corner of the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.MoveByOffset(System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the last known mouse coordinates.
            </summary>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.ContextClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Right-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to right-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.DragAndDrop(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
            <summary>
            Performs a drag-and-drop operation from one element to another.
            </summary>
            <param name="source">The element on which the drag operation is started.</param>
            <param name="target">The element on which the drop is performed.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.IActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IActionSequenceBuilder.Build">
            <summary>
            Builds the sequence of actions.
            </summary>
            <returns>A composite <see cref="T:OpenQA.Selenium.Interactions.IAction"/> which can be used to perform the actions.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.IWebDriver"/> object on which the actions built will be performed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.KeyDown(System.String)">
            <summary>
            Sends a modifier key down message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.KeyDown(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier key down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.KeyUp(System.String)">
            <summary>
            Sends a modifier key up message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.KeyUp(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier up down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the browser.
            </summary>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.SendKeys(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a sequence of keystrokes to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the keystrokes.</param>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.ClickAndHold(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks and holds the mouse button down on the specified element.
            </summary>
            <param name="onElement">The element on which to click and hold.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.Release(OpenQA.Selenium.IWebElement)">
            <summary>
            Releases the mouse button on the specified element.
            </summary>
            <param name="onElement">The element on which to release the button.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.Click(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.Click">
            <summary>
            Clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.DoubleClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Double-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to double-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.MoveToElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Moves the mouse to the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the top-left corner of the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.MoveByOffset(System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the last known mouse coordinates.
            </summary>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.ContextClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Right-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to right-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.DragAndDrop(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
            <summary>
            Performs a drag-and-drop operation from one element to another.
            </summary>
            <param name="source">The element on which the drag operation is started.</param>
            <param name="target">The element on which the drop is performed.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DefaultActionSequenceBuilder.Build">
            <summary>
            Builds the sequence of actions.
            </summary>
            <returns>A composite <see cref="T:OpenQA.Selenium.Interactions.IAction"/> which can be used to perform the actions.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.DoubleClickAction">
            <summary>
            Defines an action for double-clicking on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.DoubleClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyDownAction">
            <summary>
            Defines an action for pressing a modifier key (Shift, Alt, or Control) on the keyboard.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.SingleKeyAction">
            <summary>
            Defines an action for keyboard interaction with the browser using a single modifier key.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.KeyboardAction">
            <summary>
            Defines an action for keyboard interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.KeyboardAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.KeyboardAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.KeyboardAction.FocusOnElement">
            <summary>
            Focuses on the element on which the action is to be performed.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.KeyboardAction.Keyboard">
            <summary>
            Gets the keyboard with which to perform the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.SingleKeyAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.SingleKeyAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.SingleKeyAction.Key">
            <summary>
            Gets the key with which to perform the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyDownAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyDownAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyDownAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyUpAction">
            <summary>
            Defines an action for releasing a modifier key (Shift, Alt, or Control) on the keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyUpAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyUpAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyUpAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveMouseAction">
            <summary>
            Defines an action for moving the mouse to a specified location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveMouseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.MoveMouseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveMouseAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveToOffsetAction">
            <summary>
            Defines an action for moving the mouse to a specified offset from its current location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveToOffsetAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.MoveToOffsetAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
            <param name="offsetX">The horizontal offset from the origin of the target to which to move the mouse.</param>
            <param name="offsetY">The vertical offset from the origin of the target to which to move the mouse.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveToOffsetAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.SendKeysAction">
            <summary>
            Defines an action for sending a sequence of keystrokes to an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SendKeysAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.SendKeysAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="keysToSend">The key sequence to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SendKeysAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.ICoordinates">
            <summary>
            Provides location of the element using various frames of reference.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationOnScreen">
            <summary>
            Gets the location of an element in absolute screen coordinates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationInViewport">
            <summary>
            Gets the location of an element relative to the origin of the view port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationInDom">
            <summary>
            Gets the location of an element's position within the HTML DOM.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.AuxiliaryLocator">
            <summary>
            Gets a locator providing a user-defined location for this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor">
            <summary>
            Utility class used to execute "asynchronous" scripts. This class should
            only be used by browsers that do not natively support asynchronous
            script execution.
            <para>Warning: this class is intended for internal use
            only. This class will be removed without warning after all
            native asynchronous implemenations have been completed.
            </para>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.#ctor(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor"/> class.
            </summary>
            <param name="executor">An <see cref="T:OpenQA.Selenium.IJavaScriptExecutor"/> object capable of executing JavaScript.</param>
        </member>
        <member name="M:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes a JavaScript script asynchronously.
            </summary>
            <param name="script">The script to execute.</param>
            <param name="args">An array of objects used as arguments in the script.</param>
            <returns>The object which is the return value of the script.</returns>
            <exception cref="T:System.InvalidOperationException">if the object executing the function doesn't support JavaScript.</exception>
            <exception cref="T:OpenQA.Selenium.WebDriverException">if the page reloads during the JavaScript execution.</exception>
            <exception cref="T:System.TimeoutException">if the timeout expires during the JavaScript execution.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.Timeout">
            <summary>
            Gets or sets the timeout for the script executor.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByClassName">
            <summary>
            Defines the interface through which the user finds elements by their CSS class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByClassName.FindElementByClassName(System.String)">
            <summary>
            Finds the first element matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByClassName.FindElementsByClassName(System.String)">
            <summary>
            Finds all elements matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByCssSelector">
            <summary>
            Defines the interface through which the user finds elements by their cascading stylesheet (CSS) selector.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByCssSelector.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByCssSelector.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsById">
            <summary>
            Defines the interface through which the user finds elements by their ID.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsById.FindElementById(System.String)">
            <summary>
            Finds the first element matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsById.FindElementsById(System.String)">
            <summary>
            Finds all elements matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByLinkText">
            <summary>
            Defines the interface through which the user finds elements by their link text.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByLinkText.FindElementByLinkText(System.String)">
            <summary>
            Finds the first element matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByLinkText.FindElementsByLinkText(System.String)">
            <summary>
            Finds all elements matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByName">
            <summary>
            Defines the interface through which the user finds elements by their name.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByName.FindElementByName(System.String)">
            <summary>
            Finds the first element matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByName.FindElementsByName(System.String)">
            <summary>
            Finds all elements matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByPartialLinkText">
            <summary>
            Defines the interface through which the user finds elements by a partial match on their link text.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByPartialLinkText.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first element matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByPartialLinkText.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds all elements matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByTagName">
            <summary>
            Defines the interface through which the user finds elements by their tag name.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByTagName.FindElementByTagName(System.String)">
            <summary>
            Finds the first element matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByTagName.FindElementsByTagName(System.String)">
            <summary>
            Finds all elements matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByXPath">
            <summary>
            Defines the interface through which the user finds elements by XPath.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByXPath.FindElementByXPath(System.String)">
            <summary>
            Finds the first element matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByXPath.FindElementsByXPath(System.String)">
            <summary>
            Finds all elements matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWrapsDriver">
            <summary>
            Defines the interface through which the user can access the driver used to find an element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWrapsDriver.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver"/> used to find this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWrapsElement">
            <summary>
            Defines the interface through which the user can discover if there is an underlying element to be used.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWrapsElement.WrappedElement">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebElement"/> wrapped by this object.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ResourceUtilities">
            <summary>
            Encapsulates methods for finding and extracting WebDriver resources.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ResourceUtilities.GetResourceStream(System.String,System.String)">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> that contains the resource to use.
            </summary>
            <param name="fileName">A file name in the file system containing the resource to use. 
            It should be located in the same directory as the executing assembly.</param>
            <param name="resourceId">A string representing the resource name embedded in the
            executing assembly, if it is not found in the file system.</param>
            <returns>A Stream from which the resource can be read.</returns>
            <exception cref="T:OpenQA.Selenium.WebDriverException">Thrown if neither the file nor the embedded resource can be found.</exception>
            <remarks>
            We assume either (1) the .zip file exists in the same directory as the calling assembly
            (which should be the browser-specific driver assembly), or (2) it exists inside the calling
            assembly as an embedded resource.
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ReturnedCookie">
            <summary>
            Represents a cookie returned to the driver by the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCookie.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Boolean,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.ReturnedCookie"/> class with a specific name, 
            value, domain, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <param name="isSecure"><see langword="true"/> if the cookie is secure; otherwise <see langword="false"/></param>
            <param name="currentUrl">The current <see cref="T:System.Uri"/> the browser is viewing.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value or currentUrl is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCookie.ToString">
            <summary>
            Creates and returns a string representation of the current cookie. 
            </summary>
            <returns>A string representation of the current cookie.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCookie.CurrentHost">
            <summary>
            Gets the current URL the browser is viewing.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCookie.Secure">
            <summary>
            Gets a value determining if the cookie is secure.
            </summary>
        </member>
    </members>
</doc>
