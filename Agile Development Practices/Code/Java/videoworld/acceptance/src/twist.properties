sahi.browserExecutable=firefox-bin


#Provide the absolute path of the browser executable
#For mac, the path should be the firefox executable inside the "Firefox.app/Contents/MacOS" folder
sahi.browserLocation="/Applications/Firefox.app/Contents/MacOS/firefox-bin"


#Browser Options
#No value for IE 7
#"-nomerge" for IE 8
#"-profile sahi/userdata/browser/ff/profiles/sahi<threadnumber> -no-remote" for firefox
#"-profile /sahi/userdata/browser/ff/profiles/sahi<threadnumber> -no-remote" for firefox in mac
sahi.browserOptions=-profile "./sahi/userdata/browser/ff/profiles/sahi<threadnumber>" -no-remote
# set this if you need to supply a custom sahi folder to override. Twist defaults this to the bundled sahi folder path.
sahi.basePath=

#Sahi NTLM properties
#To enable NTLM, set the below property to true
sahi.ntlm=false
#Configure non-NTLM user, to get the login page for NTLM
#format will be either USER_NAME@DOMAIN_NAME or MACHINE_NAME\USER_NAME
sahi.ntlm_user=



twist.generate_local_report=false
# Modify the property below to write HTML reports to a custom folder.
# Relative paths such as "reports" would cause the folder to be created within your project
# You may use absolute paths such as "/reports" or "\\\\machinename/folder1/folder2" (in Windows) too
twist.local_report_location=reports
# Modify the property below to enable warnings related to class loading.
twist.class_load_warnings=true
# Modify the property below to pass additional JVM arguments for scenario execution.
twist.jvm_args_for_scenarios=
